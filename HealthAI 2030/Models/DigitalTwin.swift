import Foundation

/// Represents the Digital Twin, a dynamic, predictive model of a user's health.
///
/// - Central repository for all data related to the twin, including biometric, genomic, clinical, lifestyle, and environmental data.
/// - Used for analytics, predictions, and personalized recommendations.
/// - TODO: Add computed properties for risk scores and health summaries.
public struct DigitalTwin: Codable, Identifiable {
    public let id: UUID
    /// The date this version of the twin was created or last updated.
    var lastUpdated: Date
    // MARK: - Core Data Components
    /// High-resolution biometric data.
    var biometricData: BiometricProfile
    /// Genomic data profile (optional and user-provided).
    var genomicData: GenomicProfile?
    /// Clinical data from EHRs and lab results.
    var clinicalData: ClinicalProfile?
    /// Lifestyle data including nutrition, exercise, and sleep.
    var lifestyleData: LifestyleProfile
    /// Environmental data context.
    var environmentalContext: EnvironmentalProfile
    /// Health predictions generated by the Pre-Symptomatic Analytics Core.
    var healthPredictions: [HealthPrediction]
    // MARK: - Initializer
    public init(id: UUID = UUID(),
                lastUpdated: Date = Date(),
                biometricData: BiometricProfile,
                genomicData: GenomicProfile? = nil,
                clinicalData: ClinicalProfile? = nil,
                lifestyleData: LifestyleProfile,
                environmentalContext: EnvironmentalProfile,
                healthPredictions: [HealthPrediction] = []) {
        self.id = id
        self.lastUpdated = lastUpdated
        self.biometricData = biometricData
        self.genomicData = genomicData
        self.clinicalData = clinicalData
        self.lifestyleData = lifestyleData
        self.environmentalContext = environmentalContext
        self.healthPredictions = healthPredictions
    }
    // TODO: Add methods for updating and merging twin data.
}

// MARK: - Sub-structures for Data Organization

/// A profile of the user's biometric data (e.g., HRV, RHR, SpO2).
public struct BiometricProfile: Codable {
    // Placeholder for detailed biometric properties
    var heartRateVariability: [Double]
    var restingHeartRate: [Double]
    var bloodOxygenSaturation: [Double]
    // ... other biometric data points
    // TODO: Add more biometric metrics and provenance.
}

/// A profile of the user's genomic data (e.g., genetic markers).
public struct GenomicProfile: Codable {
    // Placeholder for genomic markers
    var geneticMarkers: [String: String] // e.g., ["rs12345": "A/G"]
    // TODO: Add support for variant interpretation and risk alleles.
}

/// A profile of the user's clinical data (e.g., lab results).
public struct ClinicalProfile: Codable {
    // Placeholder for clinical records
    var labResults: [String: String] // e.g., ["Cholesterol": "200 mg/dL"]
    // TODO: Add support for longitudinal records and FHIR integration.
}

/// A profile of the user's lifestyle data (e.g., sleep, exercise).
public struct LifestyleProfile: Codable {
    // Placeholder for lifestyle information
    var averageSleepDuration: TimeInterval
    var weeklyExerciseMinutes: Int
    // TODO: Add nutrition, stress, and other lifestyle factors.
}

/// A profile of the user's environmental context (e.g., air quality, pollen).
public struct EnvironmentalProfile: Codable {
    // Placeholder for environmental data
    var airQualityIndex: Int
    var pollenCount: Int
    // TODO: Add UV index, noise, and other environmental factors.
}
// TODO: Add unit tests for DigitalTwin and all sub-structures.