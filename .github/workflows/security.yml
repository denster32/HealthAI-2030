name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Code Security Analysis
  code-security-scan:
    name: Code Security Analysis
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for hardcoded secrets
      run: |
        echo "üîë Checking for hardcoded secrets..."
        
        # Check for common secret patterns
        SECRETS_COUNT=0
        
        # API keys
        API_KEYS=$(grep -r "api[_-]key\s*=" --include="*.swift" . | grep -v "// Example" | wc -l)
        SECRETS_COUNT=$((SECRETS_COUNT + API_KEYS))
        
        # Passwords
        PASSWORDS=$(grep -r "password\s*=" --include="*.swift" . | grep -v "// Example" | wc -l)
        SECRETS_COUNT=$((SECRETS_COUNT + PASSWORDS))
        
        # Tokens
        TOKENS=$(grep -r "token\s*=" --include="*.swift" . | grep -v "// Example" | wc -l)
        SECRETS_COUNT=$((SECRETS_COUNT + TOKENS))
        
        echo "Found $SECRETS_COUNT potential hardcoded secrets"
        
        if [ $SECRETS_COUNT -gt 0 ]; then
          echo "‚ùå Potential secrets found. Review required."
          exit 1
        else
          echo "‚úÖ No hardcoded secrets detected"
        fi
    
    - name: Validate certificate pinning
      run: |
        echo "üìú Validating certificate pinning configuration..."
        
        # Check SecurityConfig.swift for placeholder certificates
        if grep -q "Add your pinned certificate hashes here" Configuration/SecurityConfig.swift; then
          echo "‚ùå Certificate pinning contains placeholder values"
          echo "Production deployment blocked until real certificates are configured"
          exit 1
        else
          echo "‚úÖ Certificate pinning properly configured"
        fi

  # HIPAA Compliance Check
  hipaa-compliance:
    name: HIPAA Compliance Validation
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check encryption implementation
      run: |
        echo "üè• Validating HIPAA compliance requirements..."
        
        # Check for encryption usage
        ENCRYPTION_USAGE=$(grep -r "CryptoKit\|AES\|encryption" --include="*.swift" . | wc -l)
        echo "Found $ENCRYPTION_USAGE encryption-related implementations"
        
        if [ $ENCRYPTION_USAGE -lt 5 ]; then
          echo "‚ùå Insufficient encryption implementation for HIPAA compliance"
          exit 1
        fi
        
        echo "‚úÖ Basic HIPAA compliance checks passed"

  # Security Status Summary
  security-status:
    name: Security Status Summary
    runs-on: ubuntu-latest
    needs: [code-security-scan, hipaa-compliance]
    if: always()
    steps:
    - name: Generate Security Report
      run: |
        echo "# Security Scan Summary"
        echo "## Results"
        echo "- Code Security: ${{ needs.code-security-scan.result }}"
        echo "- HIPAA Compliance: ${{ needs.hipaa-compliance.result }}"
        
        if [[ "${{ needs.code-security-scan.result }}" == "success" && \
              "${{ needs.hipaa-compliance.result }}" == "success" ]]; then
          echo "## ‚úÖ Overall Status: SECURE"
        else
          echo "## ‚ùå Overall Status: SECURITY ISSUES DETECTED"
          exit 1
        fi
EOF < /dev/null