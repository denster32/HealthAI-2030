<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleDevelopmentRegion</key>
    <string>$(DEVELOPMENT_LANGUAGE)</string>
    <key>CFBundleDisplayName</key>
    <string>HealthAI 2030</string>
    <key>CFBundleExecutable</key>
    <string>$(EXECUTABLE_NAME)</string>
    <key>CFBundleIdentifier</key>
    <string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>
    <key>CFBundleName</key>
    <string>$(PRODUCT_NAME)</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleShortVersionString</key>
    <string>1.0</string>
    <key>CFBundleVersion</key>
    <string>1</string>
    <key>LSRequiresIPhoneOS</key>
    <false/>
    <key>NSHealthShareUsageDescription</key>
    <string>HealthAI 2030 needs access to your health data to provide personalized health insights and family monitoring on your Apple TV.</string>
    <key>NSHealthUpdateUsageDescription</key>
    <string>HealthAI 2030 needs to update your health data to sync information across your devices.</string>
    <key>NSHomeKitUsageDescription</key>
    <string>HealthAI 2030 needs access to your HomeKit devices to control smart home automation and environment optimization.</string>
    <key>NSLocalNetworkUsageDescription</key>
    <string>HealthAI 2030 needs access to your local network to control smart home devices and sync health data.</string>
    <key>NSBluetoothAlwaysUsageDescription</key>
    <string>HealthAI 2030 uses Bluetooth to connect with health monitoring devices and smart home accessories.</string>
    <key>NSBluetoothPeripheralUsageDescription</key>
    <string>HealthAI 2030 uses Bluetooth to communicate with health sensors and smart home devices.</string>
    <key>UIApplicationSceneManifest</key>
    <dict>
        <key>UIApplicationSupportsMultipleScenes</key>
        <true/>
        <key>UISceneConfigurations</key>
        <dict>
            <key>UIWindowSceneSessionRoleApplication</key>
            <array>
                <dict>
                    <key>UISceneConfigurationName</key>
                    <string>Default Configuration</string>
                    <key>UISceneDelegateClassName</key>
                    <string>$(PRODUCT_MODULE_NAME).SceneDelegate</string>
                </dict>
            </array>
        </dict>
    </dict>
    <key>UIApplicationSupportsIndirectInputEvents</key>
    <true/>
    <key>UILaunchStoryboardName</key>
    <string>LaunchScreen</string>
    <key>UIRequiredDeviceCapabilities</key>
    <array>
        <string>arm64</string>
    </array>
    <key>UISupportedInterfaceOrientations</key>
    <array>
        <string>UIInterfaceOrientationLandscapeLeft</string>
        <string>UIInterfaceOrientationLandscapeRight</string>
    </array>
    <key>UISupportedInterfaceOrientations~tv</key>
    <array>
        <string>UIInterfaceOrientationLandscapeLeft</string>
        <string>UIInterfaceOrientationLandscapeRight</string>
    </array>
    <key>UIUserInterfaceStyle</key>
    <string>Automatic</string>
    <key>TVApplicationProviderIdentifier</key>
    <string>$(DEVELOPMENT_TEAM)</string>
    <key>TVServices</key>
    <array>
        <string>TVTopShelf</string>
    </array>
    <key>TVTopShelfImageStyle</key>
    <string>TVTopShelfImageStyleInset</string>
    <key>TVTopShelfPrimaryImageStyle</key>
    <string>TVTopShelfImageStyleInset</string>
    <key>TVTopShelfSecondaryImageStyle</key>
    <string>TVTopShelfImageStyleInset</string>
</dict>
</plist> 